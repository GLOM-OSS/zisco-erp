/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_getHello"];
  };
  "/api/users/signup": {
    post: operations["UsersController_createUser"];
  };
  "/api/users/login": {
    post: operations["UsersController_validateUser"];
  };
  "/api/users/{id}": {
    get: operations["UsersController_getOne"];
    put: operations["UsersController_updateUser"];
    delete: operations["UsersController_deleteUser"];
  };
  "/api/users/profile": {
    get: operations["UsersController_getProfile"];
  };
  "/api/users": {
    get: operations["UsersController_getUsers"];
  };
  "/api/shift": {
    get: operations["ShiftController_findAll"];
    post: operations["ShiftController_create"];
  };
  "/api/shift/{id}": {
    get: operations["ShiftController_findOne"];
    put: operations["ShiftController_update"];
    delete: operations["ShiftController_remove"];
  };
  "/api/shift/assign": {
    post: operations["AssignShiftController_create"];
  };
  "/api/shift/assign/all": {
    get: operations["AssignShiftController_findAll"];
  };
  "/api/shift/assign/{id}": {
    get: operations["AssignShiftController_findOne"];
    put: operations["AssignShiftController_update"];
    delete: operations["AssignShiftController_remove"];
  };
  "/api/projects": {
    get: operations["ProjectsController_findAll"];
    post: operations["ProjectsController_create"];
  };
  "/api/projects/{id}": {
    get: operations["ProjectsController_findOne"];
    put: operations["ProjectsController_update"];
    delete: operations["ProjectsController_remove"];
  };
  "/api/stock/items": {
    get: operations["StockItemController_findAll"];
    post: operations["StockItemController_create"];
  };
  "/api/stock/items/{id}": {
    get: operations["StockItemController_findOne"];
    put: operations["StockItemController_update"];
    delete: operations["StockItemController_remove"];
  };
  "/api/stock/item/purchase": {
    get: operations["PurchaseController_findAll"];
    post: operations["PurchaseController_create"];
  };
  "/api/stock/item/purchase/{id}": {
    get: operations["PurchaseController_findOne"];
    put: operations["PurchaseController_update"];
    delete: operations["PurchaseController_delete"];
  };
  "/api/stock/group": {
    get: operations["GrouplistController_findAll"];
    post: operations["GrouplistController_create"];
  };
  "/api/stock/group/{id}": {
    get: operations["GrouplistController_findOne"];
    put: operations["GrouplistController_update"];
    delete: operations["GrouplistController_remove"];
  };
  "/api/stock/manufacturer": {
    get: operations["ManufacturerController_findAll"];
    post: operations["ManufacturerController_create"];
  };
  "/api/stock/manufacturer/{id}": {
    get: operations["ManufacturerController_findOne"];
    put: operations["ManufacturerController_update"];
    delete: operations["ManufacturerController_remove"];
  };
  "/api/stock/suppliers": {
    get: operations["SupplierController_findAll"];
    post: operations["SupplierController_create"];
  };
  "/api/stock/suppliers/{id}": {
    get: operations["SupplierController_findOne"];
    put: operations["SupplierController_update"];
    delete: operations["SupplierController_delete"];
  };
  "/api/stock/warehouses": {
    get: operations["WarehouseController_findAll"];
    post: operations["WarehouseController_create"];
  };
  "/api/stock/warehouses/{id}": {
    get: operations["WarehouseController_findOne"];
    put: operations["WarehouseController_update"];
    delete: operations["WarehouseController_delete"];
  };
  "/api/stock/item/transfer": {
    get: operations["TransferItemController_findAll"];
    post: operations["TransferItemController_create"];
  };
  "/api/stock/item/transfer/{id}": {
    get: operations["TransferItemController_findOne"];
    put: operations["TransferItemController_update"];
    delete: operations["TransferItemController_delete"];
  };
  "/api/complaints": {
    get: operations["ComplaintsController_findAll"];
    post: operations["ComplaintsController_create"];
  };
  "/api/complaints/{id}": {
    get: operations["ComplaintsController_findOne"];
    put: operations["ComplaintsController_update"];
    delete: operations["ComplaintsController_remove"];
  };
  "/api/complaintstypes": {
    get: operations["ComplaintsTypesController_findAll"];
    post: operations["ComplaintsTypesController_create"];
  };
  "/api/complaintstypes/{id}": {
    get: operations["ComplaintsTypesController_findOne"];
    put: operations["ComplaintsTypesController_update"];
    delete: operations["ComplaintsTypesController_remove"];
  };
  "/api/contract": {
    get: operations["ContractController_findAll"];
    post: operations["ContractController_create"];
  };
  "/api/contract/{id}": {
    get: operations["ContractController_findOne"];
    put: operations["ContractController_update"];
    delete: operations["ContractController_remove"];
  };
  "/api/contracttypes": {
    get: operations["ContractTypesController_findAll"];
    post: operations["ContractTypesController_create"];
  };
  "/api/contracttypes/{id}": {
    get: operations["ContractTypesController_findOne"];
    put: operations["ContractTypesController_update"];
    delete: operations["ContractTypesController_remove"];
  };
  "/api/deals": {
    get: operations["DealsController_findAll"];
    post: operations["DealsController_create"];
  };
  "/api/deals/{id}": {
    get: operations["DealsController_findOne"];
    put: operations["DealsController_update"];
    delete: operations["DealsController_remove"];
  };
  "/api/warnings": {
    get: operations["WarningsController_findAll"];
    post: operations["WarningsController_create"];
  };
  "/api/warnings/{id}": {
    get: operations["WarningsController_findOne"];
    put: operations["WarningsController_update"];
    delete: operations["WarningsController_remove"];
  };
  "/api/warningstypes": {
    get: operations["WarningsTypesController_findAll"];
    post: operations["WarningsTypesController_create"];
  };
  "/api/warningstypes/{id}": {
    get: operations["WarningsTypesController_findOne"];
    put: operations["WarningsTypesController_update"];
    delete: operations["WarningsTypesController_remove"];
  };
  "/api/tasks": {
    get: operations["TasksController_findAll"];
    post: operations["TasksController_create"];
  };
  "/api/tasks/{id}": {
    get: operations["TasksController_findOne"];
    put: operations["TasksController_update"];
    delete: operations["TasksController_remove"];
  };
  "/api/opportunities": {
    get: operations["OpportunitiesController_findAll"];
    post: operations["OpportunitiesController_create"];
  };
  "/api/opportunities/{id}": {
    get: operations["OpportunitiesController_findOne"];
    put: operations["OpportunitiesController_update"];
    delete: operations["OpportunitiesController_remove"];
  };
  "/api/resignation": {
    get: operations["ResignationController_findAll"];
    post: operations["ResignationController_create"];
  };
  "/api/resignation/{id}": {
    get: operations["ResignationController_findOne"];
    put: operations["ResignationController_update"];
    delete: operations["ResignationController_remove"];
  };
  "/api/bugs": {
    get: operations["BugsController_findAll"];
    post: operations["BugsController_create"];
  };
  "/api/bugs/{id}": {
    get: operations["BugsController_findOne"];
    put: operations["BugsController_update"];
    delete: operations["BugsController_remove"];
  };
  "/api/termination": {
    get: operations["TerminationController_findAll"];
    post: operations["TerminationController_create"];
  };
  "/api/termination/{id}": {
    get: operations["TerminationController_findOne"];
    put: operations["TerminationController_update"];
    delete: operations["TerminationController_remove"];
  };
  "/api/terminationtypes": {
    get: operations["TerminationTypesController_findAll"];
    post: operations["TerminationTypesController_create"];
  };
  "/api/terminationtypes/{id}": {
    get: operations["TerminationTypesController_findOne"];
    put: operations["TerminationTypesController_update"];
    delete: operations["TerminationTypesController_remove"];
  };
  "/api/attendance": {
    get: operations["AttendanceController_findAll"];
    post: operations["AttendanceController_create"];
  };
  "/api/attendance/{id}": {
    get: operations["AttendanceController_findOne"];
    put: operations["AttendanceController_update"];
    delete: operations["AttendanceController_remove"];
  };
  "/api/time/change": {
    get: operations["TimeChangeRequestController_findAll"];
    post: operations["TimeChangeRequestController_create"];
  };
  "/api/time/change/{id}": {
    get: operations["TimeChangeRequestController_findOne"];
    put: operations["TimeChangeRequestController_update"];
    delete: operations["TimeChangeRequestController_remove"];
  };
  "/api/promotion": {
    get: operations["PromotionController_findAll"];
    post: operations["PromotionController_create"];
  };
  "/api/promotion/{id}": {
    get: operations["PromotionController_findOne"];
    put: operations["PromotionController_update"];
    delete: operations["PromotionController_remove"];
  };
  "/api/goals": {
    get: operations["GoalsController_findAll"];
    post: operations["GoalsController_create"];
  };
  "/api/goals/{id}": {
    get: operations["GoalsController_findOne"];
    put: operations["GoalsController_update"];
    delete: operations["GoalsController_remove"];
  };
  "/api/holiday": {
    get: operations["HolidayController_findAll"];
    post: operations["HolidayController_create"];
  };
  "/api/holiday/{id}": {
    get: operations["HolidayController_findOne"];
    put: operations["HolidayController_update"];
    delete: operations["HolidayController_remove"];
  };
  "/api/announcements": {
    get: operations["AnnouncementsController_findAll"];
    post: operations["AnnouncementsController_create"];
  };
  "/api/announcements/{id}": {
    get: operations["AnnouncementsController_findOne"];
    put: operations["AnnouncementsController_update"];
    delete: operations["AnnouncementsController_remove"];
  };
  "/api/fileManager": {
    get: operations["DepartmentController_findAll"];
    post: operations["DepartmentController_create"];
  };
  "/api/fileManager/{id}": {
    get: operations["DepartmentController_findOne"];
    put: operations["DepartmentController_update"];
    delete: operations["DepartmentController_remove"];
  };
  "/api/payroll/salary": {
    get: operations["SalaryController_findAll"];
    post: operations["SalaryController_create"];
  };
  "/api/payroll/salary/{id}": {
    get: operations["SalaryController_findOne"];
    put: operations["SalaryController_update"];
    delete: operations["SalaryController_remove"];
  };
  "/api/payroll/hourly": {
    get: operations["HourlyController_findAll"];
    post: operations["HourlyController_create"];
  };
  "/api/payroll/hourly/{id}": {
    get: operations["HourlyController_findOne"];
    put: operations["HourlyController_update"];
    delete: operations["HourlyController_remove"];
  };
  "/api/training": {
    get: operations["TrainingController_findAll"];
    post: operations["TrainingController_create"];
  };
  "/api/training/{id}": {
    get: operations["TrainingController_findOne"];
    put: operations["TrainingController_update"];
    delete: operations["TrainingController_remove"];
  };
  "/api/leads": {
    get: operations["LeadsController_findAll"];
    post: operations["LeadsController_create"];
  };
  "/api/leads/{id}": {
    get: operations["LeadsController_findOne"];
    put: operations["LeadsController_update"];
    delete: operations["LeadsController_remove"];
  };
  "/api/sales/invoice": {
    get: operations["InvoiceController_findAll"];
    post: operations["InvoiceController_create"];
  };
  "/api/sales/invoice/{id}": {
    get: operations["InvoiceController_findOne"];
    put: operations["InvoiceController_update"];
    delete: operations["InvoiceController_remove"];
  };
  "/api/tickets": {
    get: operations["TicketsController_findAll"];
    post: operations["TicketsController_create"];
  };
  "/api/tickets/{id}": {
    get: operations["TicketsController_findOne"];
    put: operations["TicketsController_update"];
    delete: operations["TicketsController_remove"];
  };
  "/api/articles": {
    get: operations["ArticlesController_findAll"];
    post: operations["ArticlesController_create"];
  };
  "/api/articles/{id}": {
    get: operations["ArticlesController_findOne"];
    put: operations["ArticlesController_update"];
    delete: operations["ArticlesController_remove"];
  };
  "/api/articles/category": {
    get: operations["CategoryController_findAll"];
    post: operations["CategoryController_create"];
  };
  "/api/articles/category/{id}": {
    get: operations["CategoryController_findOne"];
    put: operations["CategoryController_update"];
    delete: operations["CategoryController_remove"];
  };
  "/api/transactions/bankaccount": {
    get: operations["BankAccountController_findAll"];
    post: operations["BankAccountController_create"];
  };
  "/api/transactions/bankaccount/{id}": {
    get: operations["BankAccountController_findOne"];
    put: operations["BankAccountController_update"];
    delete: operations["BankAccountController_remove"];
  };
  "/api/clients": {
    get: operations["ClientsController_findAll"];
    post: operations["ClientsController_create"];
  };
  "/api/clients/{id}": {
    get: operations["ClientsController_findOne"];
    put: operations["ClientsController_update"];
    delete: operations["ClientsController_remove"];
  };
  "/api/department": {
    get: operations["DepartmentController_findAll"];
    post: operations["DepartmentController_create"];
  };
  "/api/department/{id}": {
    get: operations["DepartmentController_findOne"];
    put: operations["DepartmentController_update"];
    delete: operations["DepartmentController_remove"];
  };
  "/api/officeassets/stock/category": {
    get: operations["CategoryController_findAll"];
    post: operations["CategoryController_create"];
  };
  "/api/officeassets/stock/category/{id}": {
    get: operations["CategoryController_findOne"];
    put: operations["CategoryController_update"];
    delete: operations["CategoryController_remove"];
  };
  "/api/officeassets/stock": {
    get: operations["StockController_findAll"];
    post: operations["StockController_create"];
  };
  "/api/officeassets/stock/{id}": {
    get: operations["StockController_findOne"];
    put: operations["StockController_update"];
    delete: operations["StockController_remove"];
  };
  "/api/officeassets/stock/assign": {
    post: operations["AssignStockController_create"];
  };
  "/api/officeassets/stock/assign/all": {
    get: operations["AssignStockController_findAll"];
  };
  "/api/officeassets/stock/assign/{id}": {
    get: operations["AssignStockController_findOne"];
    put: operations["AssignStockController_update"];
    delete: operations["AssignStockController_remove"];
  };
  "/api/jobs": {
    get: operations["JobsController_findAll"];
    post: operations["JobsController_create"];
  };
  "/api/jobs/{id}": {
    get: operations["JobsController_findOne"];
    put: operations["JobsController_update"];
    delete: operations["JobsController_remove"];
  };
  "/api/indicators": {
    get: operations["IndicatorsController_findAll"];
    post: operations["IndicatorsController_create"];
  };
  "/api/indicators/{id}": {
    get: operations["IndicatorsController_findOne"];
    put: operations["IndicatorsController_update"];
    delete: operations["IndicatorsController_remove"];
  };
  "/api/appraisal": {
    get: operations["AppraisalController_findAll"];
    post: operations["AppraisalController_create"];
  };
  "/api/appraisal/{id}": {
    get: operations["AppraisalController_findOne"];
    put: operations["AppraisalController_update"];
    delete: operations["AppraisalController_remove"];
  };
  "/api/apply-leave": {
    get: operations["LeaveController_findAll"];
    post: operations["LeaveController_create"];
  };
  "/api/apply-leave/{id}": {
    get: operations["LeaveController_findOne"];
    put: operations["LeaveController_update"];
    delete: operations["LeaveController_remove"];
  };
  "/api/compains": {
    get: operations["CompainsController_findAll"];
    post: operations["CompainsController_create"];
  };
  "/api/compains/{id}": {
    get: operations["CompainsController_findOne"];
    put: operations["CompainsController_update"];
    delete: operations["CompainsController_remove"];
  };
  "/api/target/list": {
    get: operations["TargetListController_findAll"];
    post: operations["TargetListController_create"];
  };
  "/api/target/list/{id}": {
    get: operations["TargetListController_findOne"];
    put: operations["TargetListController_update"];
    delete: operations["TargetListController_remove"];
  };
  "/api/quotes": {
    get: operations["QuotesController_findAll"];
    post: operations["QuotesController_create"];
  };
  "/api/quotes/{id}": {
    get: operations["QuotesController_findOne"];
    put: operations["QuotesController_update"];
    delete: operations["QuotesController_remove"];
  };
  "/api/tax": {
    get: operations["TaxController_findAll"];
    post: operations["TaxController_create"];
  };
  "/api/tax/{id}": {
    get: operations["TaxController_findOne"];
    put: operations["TaxController_update"];
    delete: operations["TaxController_remove"];
  };
  "/api/contact": {
    get: operations["ContactController_findAll"];
    post: operations["ContactController_create"];
  };
  "/api/contact/{id}": {
    get: operations["ContactController_findOne"];
    put: operations["ContactController_update"];
    delete: operations["ContactController_remove"];
  };
  "/api/shippingprovider": {
    get: operations["ShippingProviderController_findAll"];
    post: operations["ShippingProviderController_create"];
  };
  "/api/shippingprovider/{id}": {
    get: operations["ShippingProviderController_findOne"];
    put: operations["ShippingProviderController_update"];
    delete: operations["ShippingProviderController_remove"];
  };
  "/api/salesorder": {
    get: operations["SalesOrderController_findAll"];
    post: operations["SalesOrderController_create"];
  };
  "/api/salesorder/{id}": {
    get: operations["SalesOrderController_findOne"];
    put: operations["SalesOrderController_update"];
    delete: operations["SalesOrderController_remove"];
  };
  "/api/invoice": {
    get: operations["InvoiceController_findAll"];
    post: operations["InvoiceController_create"];
  };
  "/api/invoice/{id}": {
    get: operations["InvoiceController_findOne"];
    put: operations["InvoiceController_update"];
    delete: operations["InvoiceController_remove"];
  };
  "/api/product": {
    get: operations["ProductController_findAll"];
    post: operations["ProductController_create"];
  };
  "/api/product/{id}": {
    get: operations["ProductController_findOne"];
    put: operations["ProductController_update"];
    delete: operations["ProductController_remove"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserDto: {
      /** @example john doe */
      fullName: string;
      /** @example johndoe */
      username: string;
      /** @example pass1 */
      password: string;
      /** @example pass1 */
      confirmPassword: string;
      /** @example john@gmail.com */
      email: string;
      /** @example comp1 */
      companyName: string;
      /** @example info@comp1.com */
      companyEmail: string;
    };
    ShiftDto: {
      /** @example D5QSFKD */
      shiftName: string;
      /** @example 9:40 */
      startTime: string;
      /** @example 25 */
      minutebeforetheshiftstarts: string;
      /** @example All projects goes here */
      lunchTime: string;
      /** @example 20-10 */
      startDate: string;
      /** @example Kond */
      employeeName: string;
      /** @example approved */
      status: string;
      /** @example 12:00 */
      endTime: string;
      /** @example 30 */
      minuteaftertheshiftends: string;
      /** @example 20-20 */
      endDate: string;
    };
    AssignShiftDto: {
      /** @example Kond */
      employeeName: string;
      /** @example D5QSFKD */
      shiftName: string;
      /** @example 20-10 */
      startDate: string;
      /** @example 20-20 */
      endDate: string;
    };
    ProjectsDto: {
      /** @example 0001 */
      projectsNo: number;
      /** @example projectName */
      projectName: string;
      /** @example projectCategory */
      projectCategory: string;
      /** @example projectClient */
      projectClient: string;
      /** @example 74% */
      progress: string;
      /** @example 20-05-2023 */
      startDate: string;
      /** @example 21-06-2023 */
      endDate: string;
      /** @example fixed-price */
      billingType: string;
      /** @example 50 */
      fixedPrice: string;
      /** @example 50 */
      hourlyRate: string;
      /** @example 50 */
      estimateHours: string;
      /** @example billingType */
      status: string;
      /** @example https://www.demourl.com */
      demoUrl: string;
      /** @example @everyone */
      tags: string;
      /** @example Project-description */
      description: string;
    };
    StockItemDto: {
      /** @example Nike air */
      itemName: string;
      /** @example nikeAir1 */
      code: string;
      /** @example huqer */
      barcodeSymbology: string;
      /** @example pass1 */
      Manufacturer: string;
      /** @example 645cd8bb951936068ef90b95 */
      warehouse: string;
      /** @example 50000 */
      costPrice: number;
      /** @example 60000 */
      salesPrice: number;
      /** @example pc */
      unitType: string;
      /** @example 10 */
      quantity: number;
      /** @example gr1 */
      itemGroup: string;
      /** @example 10000 */
      tax: number;
    };
    PurchaseDto: {
      /** @example 123456 */
      refNo: number;
      /** @example ubyz */
      supplier: string;
      /** @example 20-07-2022 */
      purchaseDate: string;
      /** @example 20-07-2022 */
      dueDate: string;
      /** @example warehouse1 */
      warehouse: string;
      /** @example user1 */
      user: string;
      /** @example purchase agent */
      purchaseAgent: string;
      /** @example no */
      updateStock: string;
      /** @example nike air 1 */
      item: string;
      /** @example amature */
      discountType: string;
      /** @example @all */
      tags: string;
      /** @example Description */
      notes: string;
    };
    GrouplistDto: {
      /** @example grp1 */
      name: string;
      /** @example This is grp1 */
      description: string;
    };
    ManufacturerDto: {
      /** @example maname */
      name: string;
      /** @example This is Manufacturer from ... */
      description: string;
    };
    SupplierDto: {
      /** @example john doe */
      name: string;
      /** @example 07812345678 */
      mobile: string;
      /** @example 07812345678 */
      phone: string;
      /** @example Kigali */
      address: string;
      /** @example 07812345678 */
      vatNumber: string;
    };
    WarehouseDto: {
      /** @example 123456 */
      warehouseCode: number;
      /** @example john doe */
      warehouseName: string;
      /** @example 07812345678 */
      phone: string;
      /** @example 07812345678 */
      mobile: string;
      /** @example w1@info.com */
      email: string;
      /** @example Kigali */
      address: string;
      /** @example file1 */
      image: string;
      /** @example published */
      status: string;
    };
    TransferItemDto: {
      /** @example 123456 */
      refNo: number;
      /** @example nike air1 */
      item: string;
      /** @example $50 */
      shippingCost: string;
      /** @example 20-07-2022 */
      date: string;
      /** @example attachment */
      attachment: string;
      /** @example from-warehouse1 */
      from: string;
      /** @example to-warehouse2 */
      to: string;
      /** @example pending */
      status: string;
      /** @example Description */
      notes: string;
    };
    ComplaintsDto: {
      /** @example WZVESUY */
      complaintCode: string;
      /** @example complaint-subject */
      description: string;
      /** @example select-clients */
      client: string;
      /** @example type3 */
      type: string;
      /** @example 01-03-2023 */
      complaintDate: string;
      /** @example 31-05-2023 */
      dueDate: string;
      /** @example attachment */
      attachment: string;
      /** @example Steps-to-solve-the-bug */
      procedureToSolve: string;
      /** @example open */
      Status: string;
    };
    ComplaintsTypesDto: {
      /** @example type3 */
      name: string;
    };
    ContractDto: {
      /** @example subject */
      subject: string;
      /** @example client */
      client: string;
      /** @example project1 */
      projects: string;
      /** @example type3 */
      type: string;
      /** @example 01-03-2023 */
      startDate: string;
      /** @example 31-05-2023 */
      endDate: string;
      /** @example attachment */
      contractValue: string;
      /** @example Steps-to-solve-the-bug */
      description: string;
      /** @example open */
      visibleToClient: string;
    };
    ContractTypesDto: {
      /** @example type3 */
      name: string;
    };
    DealsDto: {
      /** @example deal-title */
      title: string;
      /** @example deal-value */
      dealValue: string;
      /** @example source-deal */
      source: string;
      /** @example 20-04-2023 */
      closeDate: string;
      /** @example deal-pipeline */
      pipeline: string;
      /** @example deal-client-name */
      clientName: string;
      /** @example deal-owner */
      dealOwner: string;
      /** @example the-dealer */
      assigne: string;
      /** @example @everyone */
      tags: string;
    };
    WarningsDto: {
      /** @example someone */
      warningBy: string;
      /** @example else */
      warningTo: string;
      /** @example disciplinary */
      warningType: string;
      /** @example attachment */
      attachment: string;
      /** @example 01-03-2023 */
      warningDate: string;
      /** @example warning-description */
      description: string;
    };
    WarningsTypesDto: {
      /** @example type3 */
      name: string;
      /** @example some-descriptions */
      description: string;
    };
    TasksDto: {
      /** @example task1 */
      taskName: string;
      /** @example selectCategory */
      selectCategory: string;
      /** @example relatedTo */
      relatedTo: string;
      /** @example startDate */
      startDate: string;
      /** @example dueDate */
      dueDate: string;
      /** @example assignedTo */
      assignedTo: string;
      /** @example hourlRate */
      hourlRate: string;
      /** @example assignedTo */
      estimatedHour: string;
      /** @example 50% */
      progress: string;
      /** @example done */
      taskStatus: string;
      /** @example @everyone */
      tags: string;
      /** @example true */
      billable: string;
      /** @example task-description */
      taskDescription: string;
    };
    OpportunitiesDto: {
      /** @example opportunityName */
      opportunityName: string;
      /** @example 20 */
      probabilityOfWinning: number;
      /** @example currentState */
      currentState: string;
      /** @example 50 */
      expectedRevenue: number;
      /** @example publish */
      nextAction: string;
      /** @example person1 */
      responsible: string;
      /** @example allevels */
      stages: string;
      /** @example 20-01-2023 */
      forecastCloseDate: string;
      /** @example http://newlink.com */
      addNewLink: string;
      /** @example 20-04-2023 */
      nexActionDate: string;
      /** @example shortNote */
      shortNote: string;
    };
    ResignationDto: {
      /** @example employeeName */
      employeeName: string;
      /** @example 20-01-2023 */
      resignationDate: string;
      /** @example 20-04-2023 */
      lastResignationDate: string;
      /** @example description for resignation */
      description: string;
    };
    BugsDto: {
      /** @example issue#4582 */
      issue: string;
      /** @example can't read this property */
      bugTitle: string;
      /** @example relatedTo */
      relatedTo: string;
      /** @example relatedTo */
      reporter: string;
      /** @example priority */
      priority: string;
      /** @example assignedTo */
      assignedTo: string;
      /** @example description for the bug */
      description: string;
      /** @example severity */
      severity: string;
      /** @example bugStatus */
      bugStatus: string;
      /** @example reproducibility */
      reproducibility: string;
    };
    TerminationDto: {
      /** @example employeeName */
      employeeName: string;
      /** @example terminationType */
      terminationType: string;
      /** @example attachment */
      attachment: string;
      /** @example 01-03-2023 */
      noticeDate: string;
      /** @example 31-05-2023 */
      terminationDate: string;
      /** @example termination-desctiption */
      description: string;
    };
    TerminationTypesDto: {
      /** @example type3 */
      name: string;
      /** @example description */
      description: string;
    };
    AttendanceDto: {
      /** @example employee#4582 */
      employee: string;
      /** @example true */
      attended: boolean;
      /** @example 20-04-2023 */
      date: string;
    };
    TimeChangeRequestDto: {
      /** @example 20-07-2023 */
      dateIn: string;
      /** @example 20:25 */
      clockIn: string;
      /** @example 20-09-2023 */
      dateOut: string;
      /** @example 21:25 */
      clockOut: string;
    };
    PromotionDto: {
      /** @example employee#4582 */
      employee: string;
      /** @example designation */
      designation: string;
      /** @example promotionTitle */
      promotionTitle: string;
      /** @example 20-05-2023 */
      promotionDate: string;
      /** @example description */
      description: string;
    };
    GoalsDto: {
      /** @example subject#4582 */
      subject: string;
      /** @example long-term */
      goalType: string;
      /** @example targetAchievement */
      targetAchievement: string;
      /** @example 20-05-2023 */
      startDate: string;
      /** @example 20-05-2024 */
      endDate: string;
      /** @example description */
      description: string;
    };
    HolidayDto: {
      /** @example eventName#4582 */
      eventName: string;
      /** @example description */
      description: string;
      /** @example 20-05-2023 */
      startDate: string;
      /** @example 20-05-2023 */
      endDate: string;
      /** @example holiday-location */
      location: string;
    };
    AnnouncementsDto: {
      /** @example title#4582 */
      title: string;
      /** @example description */
      description: string;
      /** @example 20-05-2023 */
      startDate: string;
      /** @example 20-05-2023 */
      endDate: string;
      /** @example attachment */
      attachment: string;
      /** @example everyone */
      shareWith: string;
      /** @example pending */
      status: string;
    };
    DepartmentDto: {
      /** @example dep-name */
      name: string;
      /** @example @all */
      designation: string;
    };
    SalaryDto: {
      /** @example 3 */
      salaryGrades: number;
      /** @example 100000 */
      basicSalary: number;
      /** @example 45 */
      rateHour: number;
      /** @example 45 */
      houseRentAllowance: number;
      /** @example 45 */
      medicalAllowance: number;
      /** @example 45 */
      providentFund: number;
      /** @example 45 */
      taxDeduction: number;
    };
    HourlyDto: {
      /** @example 3 */
      hourlyGrade: number;
      /** @example 100 */
      hourlyRate: number;
    };
    TrainingDto: {
      /** @example John */
      Employee: string;
      /** @example This is course */
      Course: string;
      /** @example John */
      Vendor: string;
      /** @example 01/09/2023 */
      startDate: string;
      /** @example 01/11/2023 */
      finishDate: string;
      /** @example 50000 */
      trainingCost: number;
      /** @example John */
      status: string;
      /** @example excellent */
      performance: string;
      /** @example This is remarks for training */
      remarks: string;
      /** @example This is remarks for training */
      Attachment: string;
    };
    LeadsDto: {
      /** @example lead-title */
      title: string;
      /** @example organization-name */
      organization: string;
      /** @example John */
      contactName: string;
      /** @example 077777790 */
      phone: string;
      /** @example newyork */
      city: string;
      /** @example usa */
      country: string;
      /** @example English */
      language: string;
      /** @example live:10304904 */
      skypeId: string;
      /** @example true */
      contactedToday: string;
      /** @example @p1,@p2,@p3,@p4,@p5 */
      tags: string;
      /** @example This is short note */
      shortNote: string;
      /** @example Status1 */
      leadStatus: string;
      /** @example source1 */
      leadSource: string;
      /** @example email@gmail.com */
      email: string;
      /** @example 07812345762 */
      mobile: number;
      /** @example NY */
      state: string;
      /** @example NY1 */
      address: string;
      /** @example https://twitter.com/me1 */
      twitter: string;
      /** @example https://facebook.com/me1 */
      facebook: string;
    };
    InvoiceDto: {
      /** @example INV-2023-May-11-0002 */
      refNo: string;
      /** @example bruce */
      clients: string;
      /** @example huqer */
      projects: string;
      /** @example 20-09-203 */
      invoiceDate: string;
      /** @example 01-10-2023 */
      dueDate: string;
      /** @example 50000 */
      discountType: string;
      /** @example w1 */
      warehouse: string;
      /** @example @everyone */
      tags: string;
      /** @example youin */
      salesAgent: string;
      /** @example true */
      allowPaypal: boolean;
      /** @example true */
      allowStripe: boolean;
      /** @example true */
      allowAuthorizenet: boolean;
      /** @example true */
      allowCcavenue: boolean;
      /** @example true */
      allowBraintree: boolean;
      /** @example true */
      allowMollie: boolean;
      /** @example true */
      allowPayumoney: boolean;
      /** @example Thank you for your busasiness. Please process this invoice within the due date. */
      notes: string;
    };
    TicketsDto: {
      /** @example D5QSFKD */
      ticketCode: string;
      /** @example This is Ticket's subject */
      subject: string;
      /** @example John */
      reporter: string;
      /** @example All projects goes here */
      projects: string;
      /** @example high */
      priority: string;
      /** @example f9 */
      department: string;
      /** @example @everyone */
      tags: string;
      /** @example attachments goes here */
      attachments: string;
      /** @example This is message for tickets */
      ticketMessage: string;
    };
    ArticlesDto: {
      /** @example article-title */
      title: string;
      /** @example article-slug */
      slug: string;
      /** @example category-1 */
      category: string;
      /** @example true */
      onlyforinternal: boolean;
      /** @example active */
      status: string;
      /** @example article-desciption will go down here */
      description: string;
      /** @example attachments */
      attachment: string;
    };
    CategoryDto: {
      /** @example category-name */
      name: string;
      /** @example sub-category */
      sub: string;
    };
    BankAccountDto: {
      /** @example account-name */
      name: string;
      /** @example This is the description for this bank account */
      description: string;
      /** @example 1000 */
      initialBalance: number;
      /** @example 10712903475 */
      accontNumber: number;
      /** @example peter */
      contactPerson: string;
      /** @example 0781234567 */
      phone: string;
      /** @example Other-details-for-bank-account */
      bankDetails: string;
    };
    ClientsDto: {
      /** @example name1 */
      companyName: string;
      /** @example name1@info.com */
      companyEmail: string;
      /** @example 18 */
      companyVat: string;
      /** @example compnygr */
      customerGroup: string;
      /** @example english */
      language: string;
      /** @example 50usd */
      currency: string;
      /** @example false */
      receivesmsNotifications: boolean;
      /** @example short notes are here */
      shortNote: string;
    };
    StockDto: {
      /** @example category-name */
      stock_category: string;
      /** @example buying-date */
      buying_date: string;
      /** @example item-name */
      item_name: string;
      /** @example inventory-name */
      inventory: string;
    };
    AssignStockDto: {
      /** @example category-name */
      assign_stock_category: string;
      /** @example item-name */
      item_name: string;
      /** @example employee-name */
      employee_name: string;
      /** @example inventory-name */
      inventory: string;
      /** @example 100 */
      assign_quantity: string;
      /** @example 10-09-2022 */
      assign_date: string;
    };
    JobsDto: {
      /** @example job-title */
      jobTitle: string;
      /** @example designation */
      designation: string;
      /** @example job Nature */
      jobNature: string;
      /** @example 7 years */
      experience: string;
      /** @example 25 */
      age: string;
      /** @example negotiable */
      salaryRange: string;
      /** @example English */
      vacancy: string;
      /** @example 20-10-2023 */
      postedDate: string;
      /** @example 25-12-2023 */
      lastDateToApply: string;
      /** @example description */
      description: string;
      /** @example published */
      status: string;
    };
    IndicatorsDto: {
      /** @example designation */
      designation: string;
      /** @example advanced */
      customerExperienceManagement: string;
      /** @example intermediate */
      marketing: string;
      /** @example beginner */
      management: string;
      /** @example intermediate */
      administration: string;
      /** @example English */
      presentationSkill: string;
      /** @example intermediate */
      qualityOfWork: string;
      /** @example intermediate */
      efficiency: string;
      /** @example intermediate */
      integrity: string;
      /** @example intermediate */
      pofessionalism: string;
      /** @example intermediate */
      teamWork: string;
      /** @example intermediate */
      criticalThinking: string;
      /** @example intermediate */
      conflictManagement: string;
      /** @example intermediate */
      attendance: string;
      /** @example intermediate */
      abilityToMeetDeadline: string;
    };
    AppraisalDto: {
      /** @example employee-name */
      employeeName: string;
      /** @example may */
      month: string;
      /** @example He did it well */
      description: string;
    };
    LeaveDto: {
      /** @example user-name */
      user: string;
      /** @example cat1 */
      category: string;
      /** @example multiple-days */
      duration: string;
      /** @example 20-07-2023 */
      startDate: string;
      /** @example This is the reason behind my application to leave */
      reason: string;
      /** @example attachment is here */
      attachment: string;
    };
    CompainsDto: {
      /** @example name#4582 */
      name: string;
      /** @example compain-type */
      type: string;
      /** @example 1000 */
      budget: number;
      /** @example targetList */
      targetList: string;
      /** @example description */
      description: string;
      /** @example 20-05-2023 */
      startDate: string;
      /** @example 20-08-2023 */
      endDate: string;
      /** @example excludingTargetList */
      excludingTargetList: string;
      /** @example assignedUser */
      assignedUser: string;
      /** @example teams */
      teams: string;
    };
    TargetListDto: {
      /** @example name#4582 */
      name: string;
      /** @example description */
      description: string;
      /** @example assignedUser */
      assignedUser: string;
      /** @example teams */
      teams: string;
      /** @example false */
      sync: boolean;
    };
    QuotesDto: {
      /** @example name#4582 */
      name: string;
      /** @example sample */
      opportunity: string;
      /** @example sample */
      status: string;
      /** @example sample */
      account: string;
      /** @example 10000 */
      amount: number;
      /** @example 10-02-2023 */
      dateQuoted: string;
      /** @example sample */
      quoteNumber: string;
      /** @example sample */
      billingAddressStreet: string;
      /** @example sample */
      billingAddressCity: string;
      /** @example sample */
      billingAddressCounty: string;
      /** @example sample */
      billingAddressPostalCode: string;
      /** @example sample */
      billingAddressCountry: string;
      /** @example sample */
      shippingAddress: string;
      /** @example sample */
      shippingAddressStreet: string;
      /** @example sample */
      shippingAddressCity: string;
      /** @example sample */
      shippingAddressCounty: string;
      /** @example sample */
      shippingAddressPostalCode: string;
      /** @example sample */
      shippingAddressCountry: string;
      /** @example sample */
      billingContact: string;
      /** @example sample */
      shippingContact: string;
      /** @example sample */
      tax: string;
      /** @example sample */
      shippingProvider: string;
      /** @example sample */
      description: string;
      /** @example sample */
      itemName: string;
      /** @example sample */
      itemQty: string;
      /** @example sample */
      itemTaxRate: string;
      /** @example sample */
      itemListPrice: string;
      /** @example sample */
      itemUnitPrice: string;
      /** @example sample */
      itemCurrency: string;
    };
    TaxDto: {
      /** @example name#4582 */
      name: string;
      /** @example 30% */
      rate: string;
    };
    ContactDto: {
      /** @example sample */
      firstName: string;
      /** @example sample */
      lastName: string;
      /** @example sample */
      accounts: string;
      /** @example sample */
      email: string;
      /** @example sample */
      mobile: string;
      /** @example sample */
      city: string;
      /** @example sample */
      description: string;
      /** @example sample */
      assignedUser: string;
      /** @example sample */
      teams: string;
    };
    ShippingProviderDto: {
      /** @example name */
      name: string;
      /** @example https://webiste.com */
      webiste: string;
    };
    SalesOrderDto: {
      /** @example name#4582 */
      name: string;
      /** @example quotename#4582 */
      quote: string;
      /** @example sample */
      status: string;
      /** @example sample */
      account: string;
      /** @example 10000 */
      amount: number;
      /** @example sample */
      opportunity: string;
      /** @example 10-02-2023 */
      dateOrdered: string;
      /** @example 10000 */
      number: number;
      /** @example sample */
      billingAddressStreet: string;
      /** @example sample */
      billingAddressCity: string;
      /** @example sample */
      billingAddressCounty: string;
      /** @example sample */
      billingAddressPostalCode: string;
      /** @example sample */
      billingAddressCountry: string;
      /** @example sample */
      shippingAddressStreet: string;
      /** @example sample */
      shippingAddressCity: string;
      /** @example sample */
      shippingAddressCounty: string;
      /** @example sample */
      shippingAddressPostalCode: string;
      /** @example sample */
      shippingAddressCountry: string;
      /** @example sample */
      billingContact: string;
      /** @example sample */
      shippingContact: string;
      /** @example sample */
      tax: string;
      /** @example sample */
      shippingProvider: string;
      /** @example sample */
      description: string;
      /** @example sample */
      itemName: string;
      /** @example sample */
      itemQty: string;
      /** @example sample */
      itemTaxRate: string;
      /** @example sample */
      itemListPrice: string;
      /** @example sample */
      itemUnitPrice: string;
      /** @example sample */
      itemCurrency: string;
    };
    BusinessInvoiceDto: {
      /** @example name#4582 */
      name: string;
      /** @example salesOrder#4582 */
      salesOrder: string;
      /** @example sample */
      status: string;
      /** @example sample */
      account: string;
      /** @example 10000 */
      amount: number;
      /** @example quotename#4582 */
      quote: string;
      /** @example 10-02-2023 */
      dateInvoiced: string;
      /** @example sample */
      opportunity: string;
      /** @example 10000 */
      number: number;
      /** @example sample */
      billingAddressStreet: string;
      /** @example sample */
      billingAddressCity: string;
      /** @example sample */
      billingAddressCounty: string;
      /** @example sample */
      billingAddressPostalCode: string;
      /** @example sample */
      billingAddressCountry: string;
      /** @example sample */
      shippingAddressStreet: string;
      /** @example sample */
      shippingAddressCity: string;
      /** @example sample */
      shippingAddressCounty: string;
      /** @example sample */
      shippingAddressPostalCode: string;
      /** @example sample */
      shippingAddressCountry: string;
      /** @example sample */
      billingContact: string;
      /** @example sample */
      shippingContact: string;
      /** @example sample */
      tax: string;
      /** @example sample */
      shippingProvider: string;
      /** @example sample */
      description: string;
      /** @example sample */
      itemName: string;
      /** @example sample */
      itemQty: string;
      /** @example sample */
      itemTaxRate: string;
      /** @example sample */
      itemListPrice: string;
      /** @example sample */
      itemUnitPrice: string;
      /** @example sample */
      itemCurrency: string;
    };
    ProductDto: {
      /** @example sample */
      name: string;
      /** @example sample */
      status: string;
      /** @example sample */
      category: string;
      /** @example sample */
      brand: string;
      /** @example sample */
      teams: string;
      /** @example sample */
      costPrice: string;
      /** @example sample */
      pricingType: string;
      /** @example sample */
      listPrice: string;
      /** @example sample */
      unitPrice: string;
      /** @example true */
      taxFree: boolean;
      /** @example 21929 */
      partNumber: number;
      /** @example sample */
      weight: string;
      /** @example sample */
      url: string;
      /** @example sample */
      photo: string;
      /** @example sample */
      description: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_getHello: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_createUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDto"];
      };
    };
    responses: {
      /** @description User created successfully */
      201: {
        content: never;
      };
    };
  };
  UsersController_validateUser: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  UsersController_getOne: {
    parameters: {
      path: {
        /** @description id */
        id: unknown;
      };
    };
    responses: {
      /** @description User fetched successfully */
      200: {
        content: never;
      };
      /** @description Unauthorized Request */
      403: {
        content: never;
      };
      /** @description User not found */
      404: {
        content: never;
      };
      /** @description Bad Request */
      422: {
        content: never;
      };
      /** @description Server is unreachable ! */
      500: {
        content: never;
      };
    };
  };
  UsersController_updateUser: {
    parameters: {
      path: {
        /** @description id */
        id: unknown;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserDto"];
      };
    };
    responses: {
      /** @description User was updated successfully */
      200: {
        content: never;
      };
      /** @description Unauthorized Request */
      403: {
        content: never;
      };
      /** @description Resource not found */
      404: {
        content: never;
      };
      /** @description Bad Request */
      422: {
        content: never;
      };
      /** @description Server is unreachable ! */
      500: {
        content: never;
      };
    };
  };
  UsersController_deleteUser: {
    parameters: {
      path: {
        /** @description id */
        id: unknown;
      };
    };
    responses: {
      /** @description User deleted successfully */
      200: {
        content: never;
      };
      /** @description Unauthorized Request */
      403: {
        content: never;
      };
      /** @description User not found */
      404: {
        content: never;
      };
      /** @description Bad Request */
      422: {
        content: never;
      };
      /** @description Server is unreachable ! */
      500: {
        content: never;
      };
    };
  };
  UsersController_getProfile: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  UsersController_getUsers: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShiftController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShiftController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShiftDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ShiftController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShiftController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShiftDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShiftController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignShiftController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignShiftDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AssignShiftController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignShiftController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignShiftController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignShiftDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignShiftController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProjectsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProjectsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ProjectsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProjectsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProjectsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProjectsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockItemController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockItemController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["StockItemDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  StockItemController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockItemController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["StockItemDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockItemController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PurchaseController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  PurchaseController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PurchaseController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PurchaseController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PurchaseDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PurchaseController_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GrouplistController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  GrouplistController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GrouplistDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  GrouplistController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GrouplistController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GrouplistDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GrouplistController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ManufacturerController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ManufacturerController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManufacturerDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ManufacturerController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ManufacturerController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManufacturerDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ManufacturerController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SupplierController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  SupplierController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplierDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  SupplierController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SupplierController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SupplierDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SupplierController_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarehouseController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarehouseController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarehouseDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  WarehouseController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarehouseController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarehouseDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarehouseController_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TransferItemController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TransferItemController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TransferItemDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TransferItemController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TransferItemController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TransferItemDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TransferItemController_delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComplaintsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ComplaintsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComplaintsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsTypesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsTypesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComplaintsTypesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ComplaintsTypesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsTypesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ComplaintsTypesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ComplaintsTypesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContractDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ContractController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContractDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractTypesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractTypesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContractTypesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ContractTypesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractTypesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContractTypesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContractTypesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DealsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  DealsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DealsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  DealsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DealsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DealsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DealsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarningsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  WarningsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarningsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsTypesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsTypesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarningsTypesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  WarningsTypesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsTypesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WarningsTypesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  WarningsTypesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TasksController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TasksController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TasksDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TasksController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TasksController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TasksDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TasksController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  OpportunitiesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  OpportunitiesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunitiesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  OpportunitiesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  OpportunitiesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OpportunitiesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  OpportunitiesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ResignationController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ResignationController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResignationDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ResignationController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ResignationController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ResignationDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ResignationController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BugsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  BugsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BugsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  BugsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BugsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BugsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BugsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TerminationDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TerminationController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TerminationDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationTypesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationTypesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TerminationTypesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TerminationTypesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationTypesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TerminationTypesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TerminationTypesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AttendanceController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AttendanceController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendanceDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AttendanceController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AttendanceController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AttendanceDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AttendanceController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TimeChangeRequestController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TimeChangeRequestController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeChangeRequestDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TimeChangeRequestController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TimeChangeRequestController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TimeChangeRequestDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TimeChangeRequestController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PromotionController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  PromotionController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["PromotionDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PromotionController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PromotionController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PromotionDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PromotionController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GoalsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  GoalsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["GoalsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  GoalsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GoalsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GoalsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  GoalsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HolidayController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  HolidayController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HolidayDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  HolidayController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HolidayController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HolidayDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HolidayController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AnnouncementsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AnnouncementsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnnouncementsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AnnouncementsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AnnouncementsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AnnouncementsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AnnouncementsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DepartmentController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  DepartmentController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  DepartmentController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DepartmentController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DepartmentDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  DepartmentController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalaryController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalaryController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalaryDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  SalaryController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalaryController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalaryDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalaryController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HourlyController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  HourlyController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["HourlyDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  HourlyController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HourlyController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["HourlyDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  HourlyController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TrainingController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TrainingController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrainingDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TrainingController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TrainingController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrainingDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TrainingController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeadsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeadsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeadsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  LeadsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeadsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeadsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeadsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  InvoiceController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  InvoiceController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BusinessInvoiceDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  InvoiceController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  InvoiceController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BusinessInvoiceDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  InvoiceController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TicketsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TicketsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TicketsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TicketsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TicketsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TicketsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ArticlesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ArticlesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ArticlesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ArticlesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ArticlesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ArticlesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ArticlesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CategoryController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  CategoryController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  CategoryController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CategoryController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CategoryDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CategoryController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BankAccountController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  BankAccountController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["BankAccountDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  BankAccountController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BankAccountController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BankAccountDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  BankAccountController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ClientsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ClientsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ClientsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ClientsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ClientsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ClientsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["StockDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  StockController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["StockDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  StockController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignStockController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignStockDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AssignStockController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignStockController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignStockController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssignStockDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AssignStockController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  JobsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  JobsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  JobsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  JobsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  JobsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  IndicatorsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  IndicatorsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["IndicatorsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  IndicatorsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  IndicatorsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["IndicatorsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  IndicatorsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AppraisalController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AppraisalController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AppraisalDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AppraisalController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AppraisalController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AppraisalDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AppraisalController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeaveController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeaveController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeaveDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  LeaveController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeaveController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LeaveDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LeaveController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CompainsController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  CompainsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompainsDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  CompainsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CompainsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CompainsDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CompainsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TargetListController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TargetListController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TargetListDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TargetListController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TargetListController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TargetListDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TargetListController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  QuotesController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  QuotesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuotesDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  QuotesController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  QuotesController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["QuotesDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  QuotesController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TaxController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  TaxController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TaxController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TaxController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaxDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TaxController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContactController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContactController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ContactController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContactController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ContactDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ContactController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShippingProviderController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShippingProviderController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShippingProviderDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ShippingProviderController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShippingProviderController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ShippingProviderDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ShippingProviderController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalesOrderController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalesOrderController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesOrderDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  SalesOrderController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalesOrderController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SalesOrderDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SalesOrderController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProductController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProductController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  ProductController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProductController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProductDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  ProductController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
}
